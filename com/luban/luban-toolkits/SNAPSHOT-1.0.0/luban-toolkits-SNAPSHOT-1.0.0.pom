<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.luban</groupId>
    <artifactId>luban-toolkits</artifactId>
    <version>SNAPSHOT-1.0.0</version>
    <packaging>pom</packaging>

    <properties>
        <revision>1.0.0</revision>
        <java.version>21</java.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <!-- Dependency versions -->
        <framework-code.version>4.1.2</framework-code.version>
        <ibeetl-spring.version>3.31-RELEASE</ibeetl-spring.version>
        <sa-token.version>1.37.0</sa-token.version>
        <poi-tl.version>1.12.1</poi-tl.version>
        <zip4j.version>2.11.5</zip4j.version>
        <!-- Plugin versions -->
        <github.global.server>github</github.global.server>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 使用undertow容器来运行spring boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <!-- 启用spring jdbc，能够提供事务管理 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- 数据库连接池 -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <!-- mysql驱动 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>
        <!-- beetlsql DAO工具 -->
        <!-- <dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>sql-spring</artifactId>
            <version>${ibeetl-spring.version}</version>
        </dependency> -->
        <dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>sql-springboot-starter</artifactId>
            <version>${ibeetl-spring.version}</version>
        </dependency>
        <!-- SaToken 轻量级Java权限认证框架 -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-spring-boot3-starter</artifactId>
            <version>${sa-token.version}</version>
        </dependency>
        <!-- Sa-Token 整合 Redis （使用 jdk 默认序列化方式） -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-redis</artifactId>
            <version>${sa-token.version}</version>
        </dependency>
        <!-- Sa-Token插件：权限缓存与业务缓存分离 -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-alone-redis</artifactId>
            <version>${sa-token.version}</version>
        </dependency>
        <!-- 提供Redis连接池 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <!-- poi-tl word模板引擎 -->
        <dependency>
            <groupId>com.deepoove</groupId>
            <artifactId>poi-tl</artifactId>
            <version>${poi-tl.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.xmlgraphics</groupId>
                    <artifactId>batik-bridge</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 解决poi-tl依赖漏洞（1.14），待更新后移除 -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-bridge</artifactId>
            <version>1.17</version>
        </dependency>
        <!-- zip压缩包插件 -->
        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>${zip4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- 和第一个依赖是一起的,为了解决springboot项目的兼容性问题  -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!-- Hutool工具包-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.24</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>3.0.21</version>
            <type>pom</type>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.codehaus.groovy/groovy -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>3.0.21</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>coding</id>
            <url>https://ocs-maven.pkg.coding.net/repository/saas-report/public</url>
        </repository>
        <!--<repository>
            <id>aliyun</id>
            <name>OCS Nexus Repository</name>
            <url>http://47.107.143.238:8081/repository/aliyun/</url>
        </repository>
        <repository>
            <id>hiocs</id>
            <name>OCS Nexus Repository</name>
            <url>http://47.107.143.238:8081/repository/hiocs/</url>
        </repository>-->
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>coding</id>
            <url>https://ocs-maven.pkg.coding.net/repository/saas-report/public</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>maven.repo</id>
            <name>Local Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <!-- altDeploymentRepository ：指定替代方案应该部署项目工件的存储库（除了指定的工件）。 -->
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo
                    </altDeploymentRepository>
                </configuration>
            </plugin>
            <!--github上传插件,用于修改后的发布,执行 mvn clean deploy 自动打包上传到github-->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Creating site for ${project.artifactId} ${project.version}</message>
                    <noJekyll>true</noJekyll>
                    <!--本地jar地址, 对应上面的altDeploymentRepository-->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <!--分支-->
<!--                    <branch>refs/heads/master</branch>-->
                    <branch>refs/heads/main</branch>
                    <merge>true</merge>

                    <includes>
                        <include>**/*</include>
                    </includes>
                    <!--对应github上创建的仓库名称 name-->
                    <repositoryName>mvn-repo</repositoryName>
                    <!--github登录账号 对应的密码存在maven的setting.xml文件中-->
                    <!--由github组织拥有，则该值将是组织名称，如果由用户拥有，则该值将是用户名-->
                    <repositoryOwner>a-junkman</repositoryOwner>
                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <modules>
        <module>luban-core</module>
        <module>luban-common</module>
    </modules>
</project>